# #############################################################################
# Copyright (c) 2017 HUAWEI TECHNOLOGIES CO.,LTD and others.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
# #############################################################################
---
- name: remove kolla log directory if exist
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ KOLLA_LOG }}"
    - "{{ CEPH_DIRECTORY }}"

- name: git clone ceph ansible
  git: 
    repo: "{{ CEPH_REPO }}"
    dest: "{{ CEPH_DIRECTORY }}"
    version: "{{ CEPH_VERSION }}"

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ KOLLA_LOG }}"
    - "{{ GLANCE_CONF_DIR }}"
    - "{{ CINDER_CONF_DIR }}"
    - "{{ CINDER_VOLUME_DIR }}"
    - "{{ CINDER_BACKUP_CONF_DIR }}"
    - "{{ NOVA_CONF_DIR }}"
    - "{{ GNOCCHI_CONF_DIR }}"
    - "{{ GNOCCHI_API_CONF_DIR }}"
    - "{{ GNOCCHI_METRICD_CONF_DIR }}"
    - "{{ GNOCCHI_STATSD_CONF_DIR }}"

- name: copy file
  copy:
    src: ceph_site.yml
    dest: "{{ CEPH_DIRECTORY }}/site.yml"

- name: copy file
  copy:
    src: all.yml
    dest: "{{ CEPH_DIRECTORY }}/group_vars/"

- name: set the ceph devices
  lineinfile:
    dest: "{{ CEPH_DIRECTORY }}/group_vars/all.yml"
    line: "{{ item }}"
  with_items:
    - 'devices: {{ hostvars[ceph_host]["fact_for_ceph"] }}'
    - 'public_network: "{{ mgmt_cidr }}"'
    - 'cluster_network: "{{ storage_cidr }}"'

- name: copy file
  copy:
    src: "{{ CEPH_SETUP_SCRIPT }}"
    dest: "{{ CEPH_DIRECTORY }}/{{ CEPH_SETUP_SCRIPT }}"

- name: copy file
  template:
    src: ceph_hosts
    dest: /etc/ansible/hosts

- name: deploy ceph
  shell: "/bin/bash {{ CEPH_DIRECTORY }}/{{ CEPH_SETUP_SCRIPT }}"

- name: rander kolla globals config
  template:
    src: globals.yml.j2
    dest: /etc/kolla/globals.yml

- name: create kolla kolla-ansible directory
  file:
    path: /opt/kolla-ansible
    state: directory

- name: rander inventory
  template:
    src: multinode.j2
    dest: /opt/kolla-ansible/multinode

- name: check docker repo
  shell: "ping -c 2 {{ LOCAL_DOCKER_REPOSITORY_IP }} > /dev/null"
  register: checkresult
  ignore_errors: "true"

#- name: add docker repo
#  lineinfile:
#    dest: /etc/kolla/globals.yml
#    regexp: "#docker_registry:"
#    line: "docker_registry: {{ LOCAL_DOCKER_REPOSITORY_IP }}"
#  when: checkresult.rc == 0

- name: copy ceph conf and key for components
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: glance-api.conf, dest: /etc/kolla/config/glance/glance-api.conf }
    - { src: /tmp/kolla/ceph.conf, dest: /etc/kolla/config/glance/ceph.conf }
    - { src: /tmp/kolla/ceph.client.glance.keyring, dest: /etc/kolla/config/glance/ceph.client.glance.keyring }
    - { src: cinder-volume.conf, dest: /etc/kolla/config/cinder/cinder-volume.conf }
    - { src: cinder-backup.conf, dest: /etc/kolla/config/cinder/cinder-backup.conf }
    - { src: /tmp/kolla/ceph.conf, dest: /etc/kolla/config/cinder/ceph.conf}
    - { src: /tmp/kolla/ceph.client.cinder.keyring, dest: /etc/kolla/config/cinder/cinder-backup/ceph.client.cinder.keyring}
    - { src: /tmp/kolla/ceph.client.cinder-backup.keyring, dest: /etc/kolla/config/cinder/cinder-backup/ceph.client.cinder-backup.keyring}
    - { src: /tmp/kolla/ceph.client.cinder.keyring, dest: /etc/kolla/config/cinder/cinder-volume/ceph.client.cinder.keyring}
    - { src: /tmp/kolla/ceph.conf, dest: /etc/kolla/config/nova/ceph.conf}
    - { src: /tmp/kolla/ceph.client.cinder.keyring, dest: /etc/kolla/config/nova/ceph.client.cinder.keyring}
    - { src: /tmp/kolla/ceph.client.nova.keyring, dest: /etc/kolla/config/nova/ceph.client.nova.keyring }
    - { src: nova-compute.conf, dest: /etc/kolla/config/nova/nova-compute.conf }
    - { src: /tmp/kolla/ceph.conf, dest: /etc/kolla/config/gnocchi/ceph.conf}
    - { src: /tmp/kolla/ceph.conf, dest: /etc/kolla/config/gnocchi-api/ceph.conf}
    - { src: /tmp/kolla/ceph.conf, dest: /etc/kolla/config/gnocchi-metricd/ceph.conf }
    - { src: /tmp/kolla/ceph.conf, dest: /etc/kolla/config/gnocchi-statsd/ceph.conf }
    - { src: gnocchi.conf, dest: /etc/kolla/config/gnocchi/gnocchi.conf}
    - { src: /tmp/kolla/ceph.client.gnocchi.keyring, dest: /etc/kolla/config/gnocchi/ceph.client.gnocchi.keyring}
    - { src: /tmp/kolla/ceph.client.gnocchi.keyring, dest: /etc/kolla/config/gnocchi-api/ceph.client.gnocchi.keyring }
    - { src: /tmp/kolla/ceph.client.gnocchi.keyring, dest: /etc/kolla/config/gnocchi-metricd/ceph.client.gnocchi.keyring }
    - { src: /tmp/kolla/ceph.client.gnocchi.keyring, dest: /etc/kolla/config/gnocchi-statsd/ceph.client.gnocchi.keyring }


- name: copy kolla_site.yml
  copy:
    src: kolla_site.yml
    dest: /usr/share/kolla-ansible/ansible/site.yml

- name: add code into openvswitch to restart network
  blockinfile:
    dest: /usr/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml
    block: |
     - name: restart network
       shell: " docker stop keepalived || true && \
                ifconfig eth1 0 && ifdown -a && ifup -a ||true"
